/**
 * When john gambles at the casino, he always uses a special system of tactics that he devised himself.
 * it based on always betting in one of two ways in each game.
 * 		>betting exactly one chip(to test his luck).
 * 		>betting all-in(he bets everything he has)
 * 
 * Wins in the casino are paid equal to the wager, so if he bets C chips and wins,he gets 2C chips back. if he loses, he doesn't get chips back.
 * 
 * it was very lucky day yesterday and john won every game he played,starting with one chip and leaving the casion with N chips.
 * We also know that john played all-in no more than K times.
 * 
 * Your task is to calculate the smallest possible number of rounds he cloud have played.
 * 
 * Note: betting just one chip is never considered playing all-in.
 * 
 * Write a function class Solution { public int solution(int N, int K) }
 * 
 * Given an integer N and an integer K, returns the minimum no of rounds that are necessary for john to leave the casino with
 * N chips, having played all-in no more than K times.
 * 
 * Given N=8 and K=0, the answer is 7. K is 0 so john gets 1 chip in each round. The no.of chips as follows
 * 		at the beginning: 1
 * 			after the 1st round: 2(he bet 1)
 * 			after the 2nd round: 3(he bet 1)
 * 			after the 3nd round: 4(he bet 1)
 * 			after the 4nd round: 5(he bet 1)
 * 			after the 5nd round: 6(he bet 1)
 * 			after the 6nd round: 7(he bet 1)
 * 			after the 7nd round: 8(he bet 1)
 * 
 *    	he played all-in 0 times.
 * 
 * Given N=18 and K=2 the answer is 6. the shortest game would be:
 * 	
 * 		at the beginning: 1
 * 	
 * 			after the 1st round: 2(he bet 1)
 * 			after the 2nd round: 3(he bet 1)
 * 			after the 3nd round: 4(he bet 1)
 * 			after the 4nd round: 8(all-in)
 * 			after the 5nd round: 9(he bet 1)
 * 			after the 6nd round: 18(all-in)
 * 			
 * 		he played all-in 2 times
 * 
 * Given N=10 and K=10 the answer is 4:
 * 
 * at the beginning: 1
 * 	
 * 			after the 1st round: 2(he bet 1)
 * 			after the 2nd round: 4(all-in)
 * 			after the 3nd round: 5(he bet 1)
 * 			after the 4nd round: 10(all-in)
 * 			
 * 		he played all-in 2 times
 * 
 *
 */
public class Task3 {

	public static void main(String[] args) {

	}
	
	public static int solution(int N, int K){
		return 0;
	}

}
